name: CD - Backend Docker

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/elbowg/clims-backend
      DOCKERFILE_PATH: Backend/backend/Dockerfile
      CONTEXT: Backend/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image digest
        run: echo "Pushed $IMAGE_NAME with tags: ${{ steps.meta.outputs.tags }}"

  release-openapi:
    name: Attach OpenAPI to Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Backend/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build (skip tests)
        run: ./mvnw -q -B -ntp -DskipTests=true package

      - name: Start app and fetch OpenAPI
        run: |
          nohup ./mvnw -q -Dspring-boot.run.profiles=local spring-boot:run &
          APP_PID=$!
          echo "App PID: $APP_PID"
          for i in {1..60}; do
            if curl -fsS http://localhost:8080/actuator/health > /dev/null; then
              echo "App is up"; break; fi; sleep 1; done
          mkdir -p target/openapi
          curl -fsS http://localhost:8080/v3/api-docs -o target/openapi/openapi.json
          curl -fsS http://localhost:8080/v3/api-docs.yaml -o target/openapi/openapi.yaml
          kill $APP_PID || true
        shell: bash

      - name: Upload OpenAPI to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            Backend/backend/target/openapi/openapi.json
            Backend/backend/target/openapi/openapi.yaml
